"""remove customer_code

Revision ID: 0789b487435d
Revises: a2041a0a58c0
Create Date: 2025-06-10 11:53:53.301300

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0789b487435d'
down_revision = 'a2041a0a58c0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('vehicle_cards')
    op.drop_table('import_batches')
    #with op.batch_alter_table('courses', schema=None) as batch_op:
     #   batch_op.alter_column('fld_コースID',
      #         existing_type=sa.SMALLINT(),
       #        server_default=None,
        #       existing_nullable=False,
         #      autoincrement=True)

    with op.batch_alter_table('enefle_records', schema=None) as batch_op:
        batch_op.drop_column('customer_code')

#    with op.batch_alter_table('vehicles', schema=None) as batch_op:
 #       batch_op.alter_column('初年度登録年月',
  #             existing_type=sa.TEXT(),
   #            type_=sa.String(),
    ##   batch_op.drop_column('呼称')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('vehicles', schema=None) as batch_op:
        batch_op.add_column(sa.Column('呼称', sa.VARCHAR(length=10), autoincrement=False, nullable=True, comment='車両呼称（ナンバー下4桁）'))
        batch_op.alter_column('初年度登録年月',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)

    with op.batch_alter_table('enefle_records', schema=None) as batch_op:
        batch_op.add_column(sa.Column('customer_code', sa.VARCHAR(length=20), autoincrement=False, nullable=True, comment='お客様コード'))

    with op.batch_alter_table('courses', schema=None) as batch_op:
        batch_op.alter_column('fld_コースID',
               existing_type=sa.SMALLINT(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=32767, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)

    op.create_table('import_batches',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('batch_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment='バッチID'),
    sa.Column('file_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False, comment='ファイル名'),
    sa.Column('file_size', sa.INTEGER(), autoincrement=False, nullable=True, comment='ファイルサイズ（バイト）'),
    sa.Column('csv_format_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment='CSVフォーマット種別'),
    sa.Column('company_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='ガソリンスタンド会社名'),
    sa.Column('total_rows', sa.INTEGER(), autoincrement=False, nullable=True, comment='総行数'),
    sa.Column('success_rows', sa.INTEGER(), autoincrement=False, nullable=True, comment='成功行数'),
    sa.Column('error_rows', sa.INTEGER(), autoincrement=False, nullable=True, comment='エラー行数'),
    sa.Column('duplicate_rows', sa.INTEGER(), autoincrement=False, nullable=True, comment='重複行数'),
    sa.Column('skipped_rows', sa.INTEGER(), autoincrement=False, nullable=True, comment='スキップ行数'),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True, comment='状態'),
    sa.Column('error_message', sa.TEXT(), autoincrement=False, nullable=True, comment='エラーメッセージ'),
    sa.Column('import_started_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='取り込み開始日時'),
    sa.Column('import_completed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='取り込み完了日時'),
    sa.Column('created_by', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='実行者'),
    sa.PrimaryKeyConstraint('id', name='import_batches_pkey'),
    sa.UniqueConstraint('batch_id', name='import_batches_batch_id_key')
    )
    op.create_table('vehicle_cards',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('vehicle_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='車両ID'),
    sa.Column('card_number', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment='カード番号'),
    sa.Column('card_type', sa.VARCHAR(length=20), autoincrement=False, nullable=True, comment='カード種別'),
    sa.Column('company_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='カード会社名'),
    sa.Column('issue_date', sa.DATE(), autoincrement=False, nullable=True, comment='発行日'),
    sa.Column('expiry_date', sa.DATE(), autoincrement=False, nullable=True, comment='有効期限'),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='有効フラグ'),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True, comment='備考'),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='作成日時'),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], name='vehicle_cards_vehicle_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='vehicle_cards_pkey')
    )
    # ### end Alembic commands ###
